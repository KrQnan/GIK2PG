-- MySQL Script generated by MySQL Workbench
-- Thu Feb 17 14:40:03 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `database` DEFAULT CHARACTER SET utf8 ;
USE `database` ;

-- -----------------------------------------------------
-- Table `database`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Category(
  catid INTEGER PRIMARY KEY AUTO_INCREMENT,
  catName VARCHAR(64) NULL);


-- -----------------------------------------------------
-- Table `database`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Product(
  pid INTEGER PRIMARY KEY AUTOINCREMENT,
  pname VARCHAR(62) NULL,
  pdescription VARCHAR(250) NULL,
  price DOUBLE NULL,
  picture VARCHAR(300) NULL,
  catid INTEGER NOT NULL,
  FOREIGN KEY (catid) REFERENCES Category (catid));


-- -----------------------------------------------------
-- Table `database`.`Customer`
-- -----------------------------------------------------
drop table Customer;
CREATE TABLE IF NOT EXISTS Customer (
  cusid INTEGER PRIMARY KEY AUTOINCREMENT,
  first_name VARCHAR(45) NULL,
  last_name VARCHAR(45) NULL,
  address VARCHAR(120) NULL,
  email VARCHAR(64) NOT NULL UNIQUE);


-- -----------------------------------------------------
-- Table `database`.`User`
-- -----------------------------------------------------
drop table User;
CREATE TABLE IF NOT EXISTS User (
  userid INTEGER PRIMARY KEY AUTOINCREMENT,
  gUserid VARCHAR(32) NULL,
  roles VARCHAR(45) NULL,
  cusid INT NOT NULL,
  FOREIGN KEY (cusid) REFERENCES Customer(cusid));


-- -----------------------------------------------------
-- Table `database`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Orders(
  ordid INTEGER PRIMARY KEY AUTOINCREMENT,
  date DATE NULL,
  cusid INTEGER NOT NULL,
  FOREIGN KEY (cusid) REFERENCES Customer(cusid));


-- -----------------------------------------------------
-- Table `database`.`Shoppingcart`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Shoppingcart(
  shopid INTEGER PRIMARY KEY AUTOINCREMENT,
  userid INTEGER NOT NULL,
  FOREIGN KEY (userid) REFERENCES User(userid));


-- -----------------------------------------------------
-- Table `database`.`LineItem`
-- -----------------------------------------------------
DROP TABLE LineItem;
CREATE TABLE IF NOT EXISTS LineItem(
  lid INTEGER PRIMARY KEY AUTOINCREMENT,
  quantity INTEGER NULL,
  price DOUBLE NULL,
  pid INT NOT NULL,
  ordid INT NOT NULL,
  FOREIGN KEY (pid)REFERENCES Product(pid),
  FOREIGN KEY (ordid)REFERENCES Orders(ordid));




-- -----------------------------------------------------
-- Table `database`.`Rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Rating (
  ratid INTEGER PRIMARY KEY AUTOINCREMENT,
  score DOUBLE NULL,
  comment VARCHAR(120) NULL,
  pid INTEGER NOT NULL,
  userid INTEGER NOT NULL,
  FOREIGN KEY (userid) REFERENCES User(userid),
  FOREIGN KEY (pid) REFERENCES Product(pid));


-- -----------------------------------------------------
-- Table `database`.`Deals`
-- -----------------------------------------------------
DROP TABLE Deals;
CREATE TABLE IF NOT EXISTS Deals (
  dealid INTEGER PRIMARY KEY AUTOINCREMENT,
  discount DECIMAL NULL,
  pid INTEGER NOT NULL,
  date DATE NULL,
  FOREIGN KEY (pid) REFERENCES Product (pid));


INSERT INTO Orders (cusid, date) VALUES(3, date("now"));

INSERT INTO LineItem (quantity, price, pid, ordid) VALUES(1, 81.5, 1, 1);

UPDATE sqlite_sequence SET seq = 2 WHERE name = "Orders";
DELETE FROM Orders WHERE ordid = 3;

UPDATE User SET roles = "Admin" WHERE userid = 6;


